// Docs: https://pris.ly/d/prisma-schema

// Prisma specific
//=============================================================================

// We don't use this trash, simply because it's trash.
// Instead we only use it for the type generation.
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Auth
//=============================================================================

model Session {
  id         String   @id
  user_id    String
  expires_at DateTime
  user       User     @relation(references: [id], fields: [user_id], onDelete: Cascade)
}

// Table to store the password reset token
model ResetTokens {
  id         String   @id
  user_id    String
  expires_at DateTime
}

// Table to store the email verification token
model VerificationTokens {
  id         Int      @id @default(autoincrement())
  code       String
  user_id    String   @unique
  email      String
  expires_at DateTime
}

// User
//=============================================================================

model User {
  id         String   @id
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  email      String
  verified   Boolean @default(true)
  role       String  @default("user")
  first_name String?
  last_name  String?

  hash     String
  sessions Session[]
}

// General purpose models
//=============================================================================

model Person {
  id          Int       @id @default(autoincrement())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now()) @updatedAt
  born_at     DateTime  @default(now())
  died_at     DateTime?
  first_name  String
  middle_name String?
  last_name   String
  gender      Boolean

  slug String @unique @default("unknown")

  parent_id Int?
  parent_of Family? @relation("ParentOfFamily", fields: [parent_id], references: [id])

  child_id Int?
  child_of Family? @relation("ChildOfFamily", fields: [child_id], references: [id])

  @@unique([born_at, died_at, first_name, middle_name, last_name])
}

model Family {
  id         Int      @id @unique @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  children Person[] @relation("ChildOfFamily")
  parents  Person[] @relation("ParentOfFamily")
}
